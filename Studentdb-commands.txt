CREATE DATABASE STUDENT_DB;
USE STUDENT_DB;

CREATE TABLE STUDENT(regno VARCHAR(10) PRIMARY KEY,
name VARCHAR(20) NOT NULL, major VARCHAR(20), bdate DATE);


CREATE TABLE COURSE(courseid INTEGER PRIMARY KEY,
cname VARCHAR(20) NOT NULL, dept VARCHAR(20));


CREATE TABLE `TEXT`(book_isbn INTEGER PRIMARY KEY,
book_title VARCHAR(20) NOT NULL, author VARCHAR(20),
publisher VARCHAR(20));


CREATE TABLE ENROLL (regno VARCHAR(10),
courseid INTEGER, sem INTEGER, marks INTEGER,
PRIMARY KEY(regno,courseid),
FOREIGN KEY(regno) REFERENCES STUDENT(regno) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(courseid) REFERENCES COURSE(courseid) ON DELETE CASCADE ON UPDATE CASCADE);


CREATE TABLE `BOOK-ADOPTION`(courseid INTEGER,
book_isbn INTEGER, sem INTEGER,
PRIMARY KEY(courseid,book_isbn),
FOREIGN KEY(courseid) REFERENCES COURSE(courseid) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY(book_isbn) REFERENCES `TEXT`(book_isbn) ON DELETE CASCADE ON UPDATE CASCADE);


INSERT INTO STUDENT VALUES('1','ALBERT','UG','2000-08-26');
INSERT INTO STUDENT VALUES('2','JOHN','UG','2000-05-18');
INSERT INTO STUDENT VALUES('3','SIMON','PG','1997-07-11');
INSERT INTO STUDENT VALUES('4','DANIEL','PG','1997-12-17');
INSERT INTO STUDENT VALUES('5','BARRY','PHD','1994-05-07');
INSERT INTO STUDENT VALUES('6','JUAN','PHD','1994-10-18');

SELECT * FROM STUDENT;
/*******************************
+-------+--------+-------+------------+
| regno | name   | major | bdate      |
+-------+--------+-------+------------+
| 1     | ALBERT | UG    | 2000-08-26 |
| 2     | JOHN   | UG    | 2000-05-18 |
| 3     | SIMON  | PG    | 1997-07-11 |
| 4     | DANIEL | PG    | 1997-12-17 |
| 5     | BARRY  | PHD   | 1994-05-07 |
| 6     | JUAN   | PHD   | 1994-10-18 |
+-------+--------+-------+------------+
6 rows in set (0.00 sec)
*******************************/

INSERT INTO COURSE VALUES(1,'DBMS','CS');
INSERT INTO COURSE VALUES(2,'ALGEBRA','MATH');
INSERT INTO COURSE VALUES(3,'ALGORITHMS','CS');
INSERT INTO COURSE VALUES(4,'DATA STRUCTURE','CS');
INSERT INTO COURSE VALUES(5,'GRAPHS','MATH');
INSERT INTO COURSE VALUES(6,'WEB TECH','CS');
SELECT * FROM COURSE;
/*******************************
+----------+----------------+------+
| courseid | cname          | dept |
+----------+----------------+------+
|        1 | DBMS           | CS   |
|        2 | ALGEBRA        | MATH |
|        3 | ALGORITHMS     | CS   |
|        4 | DATA STRUCTURE | CS   |
|        5 | GRAPHS         | MATH |
|        6 | WEB TECH       | CS   |
+----------+----------------+------+
6 rows in set (0.00 sec)
*******************************/

INSERT INTO `TEXT` VALUES(1,'FUNDAMENTALS OF DBMS','NAVATHE','PEARSON EDUCATION');
INSERT INTO `TEXT` VALUES(2,'DMS','RAGHU RAMAKRISHNA','McGRAW-HILL');
INSERT INTO `TEXT` VALUES(3,'GRAPH THEORY','DOUGLAS WEST','PEARSON EDUCATION');
INSERT INTO `TEXT` VALUES(4,'FUNDAMENTALS OF LA','GILBERT','PEARSON EDUCATION');
INSERT INTO `TEXT` VALUES(5,'DATA STRUCTURES','CHRISTOPHER','McGRAW-HILL');
INSERT INTO `TEXT` VALUES(6,'WEB TECH MADE EASY','RAGHU RAMAKRISHNA','McGRAW-HILL');
INSERT INTO `TEXT` VALUES(7,'ALGORITHMS','DOUGLAS WEST','PEARSON EDUCATION');
SELECT * FROM `TEXT`;
/*******************************
+-----------+----------------------+-------------------+-------------------+
| book_isbn | book_title           | author            | publisher         |
+-----------+----------------------+-------------------+-------------------+
|         1 | FUNDAMENTALS OF DBMS | NAVATHE           | PEARSON EDUCATION |
|         2 | DMS                  | RAGHU RAMAKRISHNA | McGRAW-HILL       |
|         3 | GRAPH THEORY         | DOUGLAS WEST      | PEARSON EDUCATION |
|         4 | FUNDAMENTALS OF LA   | GILBERT           | PEARSON EDUCATION |
|         5 | DATA STRUCTURES      | CHRISTOPHER       | McGRAW-HILL       |
|         6 | WEB TECH MADE EASY   | RAGHU RAMAKRISHNA | McGRAW-HILL       |
|         7 | ALGORITHMS           | DOUGLAS WEST      | PEARSON EDUCATION |
+-----------+----------------------+-------------------+-------------------+
7 rows in set (0.01 sec)
*******************************/

INSERT INTO `BOOK-ADOPTION` VALUES(1,1,5);
INSERT INTO `BOOK-ADOPTION` VALUES(1,2,5);
INSERT INTO `BOOK-ADOPTION` VALUES(2,4,5);
INSERT INTO `BOOK-ADOPTION` VALUES(3,5,5);
INSERT INTO `BOOK-ADOPTION` VALUES(4,5,5);
INSERT INTO `BOOK-ADOPTION` VALUES(5,3,5);
INSERT INTO `BOOK-ADOPTION` VALUES(6,6,5);
SELECT * FROM `BOOK-ADOPTION`;
/*******************************
+----------+-----------+------+
| courseid | book_isbn | sem  |
+----------+-----------+------+
|        1 |         1 |    5 |
|        1 |         2 |    5 |
|        2 |         4 |    5 |
|        3 |         5 |    5 |
|        4 |         5 |    5 |
|        5 |         3 |    5 |
|        6 |         6 |    5 |
+----------+-----------+------+
7 rows in set (0.00 sec)
*******************************/

INSERT INTO ENROLL VALUES('1',1,5,94);
INSERT INTO ENROLL VALUES('1',2,5,84);
INSERT INTO ENROLL VALUES('2',1,5,99);
INSERT INTO ENROLL VALUES('3',3,5,89);
INSERT INTO ENROLL VALUES('3',4,5,94);
INSERT INTO ENROLL VALUES('3',5,5,94);
INSERT INTO ENROLL VALUES('4',4,5,74);
INSERT INTO ENROLL VALUES('5',5,5,95);
INSERT INTO ENROLL VALUES('5',2,5,85);
INSERT INTO ENROLL VALUES('6',5,5,92);
SELECT * FROM ENROLL;
/*******************************
+-------+----------+------+-------+
| regno | courseid | sem  | marks |
+-------+----------+------+-------+
| 1     |        1 |    5 |    94 |
| 1     |        2 |    5 |    84 |
| 2     |        1 |    5 |    99 |
| 3     |        3 |    5 |    89 |
| 3     |        4 |    5 |    94 |
| 3     |        5 |    5 |    94 |
| 4     |        4 |    5 |    74 |
| 5     |        2 |    5 |    85 |
| 5     |        5 |    5 |    95 |
| 6     |        5 |    5 |    92 |
+-------+----------+------+-------+
10 rows in set (0.01 sec)
*******************************/

SELECT regno, name, major FROM STUDENT WHERE name LIKE "%N";
/*******************************
+-------+-------+-------+
| regno | name  | major |
+-------+-------+-------+
| 2     | JOHN  | UG    |
| 3     | SIMON | PG    |
| 6     | JUAN  | PHD   |
+-------+-------+-------+
3 rows in set (0.00 sec)
*******************************/

SELECT regno, name, major FROM STUDENT WHERE regno BETWEEN 1 AND 3;
/*******************************
+-------+--------+-------+
| regno | name   | major |
+-------+--------+-------+
| 1     | ALBERT | UG    |
| 2     | JOHN   | UG    |
| 3     | SIMON  | PG    |
+-------+--------+-------+
3 rows in set (0.00 sec)
*******************************/

SELECT name FROM STUDENT WHERE
regno NOT IN
(SELECT regno FROM ENROLL WHERE courseid=2); 
/*******************************
+--------+
| name   |
+--------+
| JOHN   |
| SIMON  |
| DANIEL |
| JUAN   |
+--------+
4 rows in set (0.00 sec)
*******************************/

SELECT major, COUNT(*), bdate AS NO_STUDENTS FROM STUDENT GROUP BY MAJOR HAVING bdate > "1995-01-01" 
ORDER BY major ASC;
/*******************************
+-------+----------+-------------+
| major | COUNT(*) | NO_STUDENTS |
+-------+----------+-------------+
| PG    |        2 | 1997-07-11  |
| UG    |        2 | 2000-08-26  |
+-------+----------+-------------+
2 rows in set (0.00 sec)
*******************************/

SELECT name,cname FROM STUDENT S, COURSE C, ENROLL E
WHERE S.regno = E.regno AND C.courseID = E.courseID AND dept="CS" UNION
SELECT name,cname FROM STUDENT S, COURSE C, ENROLL E
WHERE S.regno = E.regno AND C.courseID = E.courseID AND dept="MATH";
/*******************************
+--------+----------------+
| name   | cname          |
+--------+----------------+
| ALBERT | DBMS           |
| JOHN   | DBMS           |
| SIMON  | ALGORITHMS     |
| SIMON  | DATA STRUCTURE |
| DANIEL | DATA STRUCTURE |
| ALBERT | ALGEBRA        |
| BARRY  | ALGEBRA        |
| SIMON  | GRAPHS         |
| BARRY  | GRAPHS         |
| JUAN   | GRAPHS         |
+--------+----------------+
10 rows in set (0.00 sec)
*******************************/

SELECT name,cname FROM (SELECT name,cname FROM STUDENT S, COURSE C, ENROLL E
WHERE S.regno = E.regno AND C.courseID = E.courseID AND dept="CS") query1 INNER JOIN
(SELECT name,cname FROM STUDENT S, COURSE C, ENROLL E
WHERE S.regno = E.regno AND C.courseID = E.courseID AND marks>90) query2 USING(name,cname);
/*******************************
+--------+----------------+
| name   | cname          |
+--------+----------------+
| ALBERT | DBMS           |
| JOHN   | DBMS           |
| SIMON  | DATA STRUCTURE |
+--------+----------------+
3 rows in set (0.00 sec)
*******************************/

SELECT book_title, author,cname FROM 
`TEXT` NATURAL JOIN `BOOK-ADOPTION` NATURAL JOIN COURSE;
/*******************************
+----------------------+-------------------+----------------+
| book_title           | author            | cname          |
+----------------------+-------------------+----------------+
| FUNDAMENTALS OF DBMS | NAVATHE           | DBMS           |
| DMS                  | RAGHU RAMAKRISHNA | DBMS           |
| GRAPH THEORY         | DOUGLAS WEST      | GRAPHS         |
| FUNDAMENTALS OF LA   | GILBERT           | ALGEBRA        |
| DATA STRUCTURES      | CHRISTOPHER       | ALGORITHMS     |
| DATA STRUCTURES      | CHRISTOPHER       | DATA STRUCTURE |
| WEB TECH MADE EASY   | RAGHU RAMAKRISHNA | WEB TECH       |
+----------------------+-------------------+----------------+
7 rows in set (0.00 sec)
*******************************/

SELECT count(*) FROM STUDENT JOIN COURSE where dept='CS';
/*******************************
+----------+
| count(*) |
+----------+
|       24 |
+----------+
1 row in set (0.00 sec)
*******************************/

SELECT book_title FROM `TEXT` T WHERE EXISTS
(SELECT book_ISBN FROM `BOOK-ADOPTION` B WHERE T.book_ISBN = B.book_ISBN);
/*******************************
+----------------------+
| book_title           |
+----------------------+
| FUNDAMENTALS OF DBMS |
| DMS                  |
| GRAPH THEORY         |
| FUNDAMENTALS OF LA   |
| DATA STRUCTURES      |
| WEB TECH MADE EASY   |
+----------------------+
6 rows in set (0.00 sec)
*******************************/

SELECT book_title FROM `TEXT` T WHERE NOT EXISTS
(SELECT book_ISBN FROM `BOOK-ADOPTION` B WHERE T.book_ISBN = B.book_ISBN);
/*******************************
+------------+
| book_title |
+------------+
| ALGORITHMS |
+------------+
1 row in set (0.00 sec)
*******************************/